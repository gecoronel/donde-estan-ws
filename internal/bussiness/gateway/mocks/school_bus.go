// Code generated by MockGen. DO NOT EDIT.
// Source: school_bus_repository.go

// Package mock_gateway is a generated GoMock package.
package mock_gateway

import (
	reflect "reflect"

	model "github.com/gecoronel/donde-estan-ws/internal/bussiness/model"
	gomock "github.com/golang/mock/gomock"
)

// MockSchoolBusRepository is a mock of SchoolBusRepository interface.
type MockSchoolBusRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSchoolBusRepositoryMockRecorder
}

// MockSchoolBusRepositoryMockRecorder is the mock recorder for MockSchoolBusRepository.
type MockSchoolBusRepositoryMockRecorder struct {
	mock *MockSchoolBusRepository
}

// NewMockSchoolBusRepository creates a new mock instance.
func NewMockSchoolBusRepository(ctrl *gomock.Controller) *MockSchoolBusRepository {
	mock := &MockSchoolBusRepository{ctrl: ctrl}
	mock.recorder = &MockSchoolBusRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSchoolBusRepository) EXPECT() *MockSchoolBusRepositoryMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockSchoolBusRepository) Delete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockSchoolBusRepositoryMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockSchoolBusRepository)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockSchoolBusRepository) Get(arg0 string) (*model.SchoolBus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*model.SchoolBus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSchoolBusRepositoryMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSchoolBusRepository)(nil).Get), arg0)
}

// Save mocks base method.
func (m *MockSchoolBusRepository) Save(arg0 model.SchoolBus) (*model.SchoolBus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(*model.SchoolBus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockSchoolBusRepositoryMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockSchoolBusRepository)(nil).Save), arg0)
}

// Update mocks base method.
func (m *MockSchoolBusRepository) Update(arg0 model.SchoolBus) (*model.SchoolBus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(*model.SchoolBus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockSchoolBusRepositoryMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockSchoolBusRepository)(nil).Update), arg0)
}
